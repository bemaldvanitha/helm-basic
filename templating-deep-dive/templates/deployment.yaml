{{- if and .Values.securityContext .Values.securityContext.enabled }}
{{- $_ := required "securityContext.runAsUser is required and enable is true" .Values.securityContext.runAsUser -}}
{{- $_ = required "securityContext.fsGroup is required and enable is true" .Values.securityContext.fsGroup -}}
{{- if int .Values.securityContext.runAsUser | eq 0 -}}
  {{- fail "Container can not be run as root user" }}
{{- end -}}
{{- end}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "templating-deep-dive.fullname" . }}
  labels:
   {{- include "templating-deep-dive.selectorLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
    {{- include "templating-deep-dive.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "templating-deep-dive.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: nginx
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          {{- with .Values.securityContext }}
          {{- if .enabled }}
          securityContext:
            runAsUser: {{- .runAsUser }}
            fsGroup: {{- .fsGroup }}
          {{- end }}
          {{- end }}
          {{- if len .Values.services }}
          ports:
            - containerPort: {{ .Values.containerPorts.http }}
              protocol: TCP
          {{end}}
      restartPolicy: Always
      